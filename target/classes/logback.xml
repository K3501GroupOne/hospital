<?xml version="1.0" encoding="UTF8" ?>
<!--scan:当此属性设置为true时,配置文件如果发生改变,将会被出现加载,默认值为true-->
<!--scanPeriod:设置监测配置文件是否修改的时间间隔,如果没有给出时间单位,默认单位是毫秒
当scan为true时,默认的时间间隔为1分钟-->
<!--debug:当此属性设置为true时,将打印出logback内部日志消息,实时查看log back运行状态,默认值为false-->
<configuration scan="true" scanPeriod="50 seconds" debug="true">
    <!--如下代码定义2个变量,可通过${log.path}和${CONSOLE_LOG_PATTERN}得到变量值-->
    <property name="CONSOLE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss,SSS} |-[%-5p] in %logger.%M[line-%L] -%m%n"></property>
    <property name="log.path" value="D:\app\dev\java\workspace\letHouse\logs"></property>

    <!--输出到控制台-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--Threshold=即最低日志级别，此appender输出大于等于对应级别的日志-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <encoder>
            <!--日志格式-->
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <!--设置字符集-->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--    追加到文件中-->
    <appender name="file" class="ch.qos.logback.core.FileAppender">
        <file>${log.path}/world.log</file>
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
        </encoder>
    </appender>

    <!--滚动追加到文件中-->
    <appender name="file2" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志文件会写到${log.path}这里路径下的world3.log这个文件中-->
        <file>${log.path}/world3.log</file>
        <!--日志文件输出格式-->
        <encoder>
            <!--日志格式-->
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <!--设置字符集-->
            <charset>UTF-8</charset>
        </encoder>
        <!--日志记录器的滚动策略，按日期，按大小记录
        文件超过最大容量后，会新建文件，然后新的日志文件中继续写入
        如果日期变更，也会新建文件，然后在新的日志文件中写入当天日志-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--超过最大限制后创建新文件后，原来的旧日志会改名为如下， %i是文件序号从0开始-->
            <fileNamePattern>${log.path}/world-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--每个日志文件的最大体量-->
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>1kb</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数，值为1：则只保留昨天的归档日志文件，例如今天是10号，保留了9号和10号，到了明天11号则保留10号和11号，，不设置则保留所有日志-->
            <maxHistory>1</maxHistory>
        </rollingPolicy>

    </appender>

    <root level="trace">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="file"/>
        <appender-ref ref="file2"/>
    </root>
</configuration>
